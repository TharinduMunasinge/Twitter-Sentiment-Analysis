#Examine results
plot(testset$sent)
lines(res, col=2)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.1 && res[i]>=1.9 )
res[i]=2
else if((res[i]>2.1 ))
res[i]=4
else if(res[i]<1.9)
res[i]=0
}
print(res)
table(res==sent2)
library('nnet')
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(453)
res <- nnet(sent ~.,
data=trainset,
size=20, linout=TRUE, hidden=10, skip=FALSE, MaxNWts=10000, trace=FALSE, maxit=10000);
#correct = (round(results$net.result) == sent)
res=predict(res, newdata=testset)
#Examine results
plot(testset$sent)
lines(res, col=2)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.1 && res[i]>=1.9 )
res[i]=2
else if((res[i]>2.1 ))
res[i]=4
else if(res[i]<1.9)
res[i]=0
}
print(res)
table(res==sent2)
library('nnet')
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(453)
res <- nnet(sent ~.,
data=trainset,
size=20, linout=TRUE, hidden=10, skip=FALSE, MaxNWts=10000, trace=FALSE, maxit=10000);
#correct = (round(results$net.result) == sent)
res=predict(res, newdata=testset)
#Examine results
plot(testset$sent)
lines(res, col=2)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.1 && res[i]>=1.9 )
res[i]=2
else if((res[i]>2.1 ))
res[i]=4
else if(res[i]<1.9)
res[i]=0
}
print(res)
table(res==sent2)
library('nnet')
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(53)
res <- nnet(sent ~.,
data=trainset,
size=20, linout=TRUE, hidden=10, skip=FALSE, MaxNWts=10000, trace=FALSE, maxit=10000);
#correct = (round(results$net.result) == sent)
res=predict(res, newdata=testset)
#Examine results
plot(testset$sent)
lines(res, col=2)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.1 && res[i]>=1.9 )
res[i]=2
else if((res[i]>2.1 ))
res[i]=4
else if(res[i]<1.9)
res[i]=0
}
print(res)
table(res==sent2)
library('nnet')
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(53)
res <- nnet(sent ~.,
data=trainset,
size=20, linout=TRUE, hidden=10, skip=FALSE, MaxNWts=10000, trace=FALSE, maxit=10000);
#correct = (round(results$net.result) == sent)
res=predict(res, newdata=testset)
#Examine results
plot(testset$sent)
lines(res, col=2)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.1 && res[i]>=1.9 )
res[i]=2
else if((res[i]>2.1 ))
res[i]=4
else if(res[i]<1.9)
res[i]=0
}
print(res)
table(res==sent2)
library('nnet')
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(43)
res <- nnet(sent ~.,
data=trainset,
size=20, linout=TRUE, hidden=10, skip=FALSE, MaxNWts=10000, trace=FALSE, maxit=10000);
#correct = (round(results$net.result) == sent)
res=predict(res, newdata=testset)
#Examine results
plot(testset$sent)
lines(res, col=2)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.1 && res[i]>=1.9 )
res[i]=2
else if((res[i]>2.1 ))
res[i]=4
else if(res[i]<1.9)
res[i]=0
}
print(res)
table(res==sent2)
library('nnet')
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(42)
res <- nnet(sent ~.,
data=trainset,
size=20, linout=TRUE, hidden=10, skip=FALSE, MaxNWts=10000, trace=FALSE, maxit=10000);
#correct = (round(results$net.result) == sent)
res=predict(res, newdata=testset)
#Examine results
plot(testset$sent)
lines(res, col=2)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.1 && res[i]>=1.9 )
res[i]=2
else if((res[i]>2.1 ))
res[i]=4
else if(res[i]<1.9)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(42)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(420)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(43)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(42)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed()
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(100)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(343300)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(343300)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,MaxNWts=10000, trace=FALSE, maxit=10000
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(343300)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,MaxNWts=10000, trace=FALSE, maxit=10000
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(42)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,MaxNWts=10000, trace=FALSE, maxit=10000
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(423)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,MaxNWts=10000, trace=FALSE, maxit=10000
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(43)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,MaxNWts=10000, trace=FALSE, maxit=10000
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(43)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
require(nnet)
require(caret)
trainset <- read.csv("trainset_java_gen.csv")
sent1 <- read.csv("train_data.csv")
trainset <- cbind(trainset, sent1)
testset <- read.csv("testset_java_gen.csv")
sent2 <- read.csv("test_data.csv")
testset=cbind(testset,sent2)
set.seed(42)
model <- train(sent ~., trainset, method='nnet', linout=TRUE, trace = FALSE,
#Grid of tuning parameters to try:
tuneGrid=expand.grid(.size=c(1,5,10),.decay=c(0,0.001,0.1)))
res <- predict(model, testset)
print(cbind(res,sent2))
for (i in 1:length(res)){
if(res[i]<=2.01 && res[i]>=1.99 )
res[i]=2
else if((res[i]>2.01))
res[i]=4
else if(res[i]<1.99)
res[i]=0
}
print(res)
table(res==sent2)
